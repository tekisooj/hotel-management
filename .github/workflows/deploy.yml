name: Deploy CDK

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main
  pull_request_target:
    types: [closed]

env:
  AWS_REGION: us-east-1
  CDK_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}

permissions:
  id-token: write
  contents: read

jobs:
  deploy-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [user_service]
    env:
      PR_NUMBER: ${{ github.event.pull_request.number }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python and CDK
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: npm install -g aws-cdk
      - run: pip install -r infra/requirements.txt
      - run: pip install -r services/${{ matrix.service }}/requirements.txt

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy Preview Stack
        run: |
          SERVICE_NAME=${{matrix.service}}
          PASCAL_CASE_NAME=$(echo "$SERVICE_NAME" | awk -F'_' 'BEGIN{OFS=""} { for(i=1;i<=NF;i++) $i=toupper(substr($i,1,1)) substr($i,2); print }')
          STACK_NAME="${PASCAL_CASE_NAME}Stack-pr-${PR_NUMBER}"
          
          echo "Deploying stack: $STACK_NAME"
          cdk deploy "$STACK_NAME" \
            --app "python3 infra/cdk/stacks/${{ matrix.service }}/app.py" \
            --context env=pr \
            --context pr_number=${{ env.PR_NUMBER }} \
            --require-approval never

  deploy-prod:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [user_service]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python and CDK
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: npm install -g aws-cdk
      - run: pip install -r infra/requirements.txt
      - run: pip install -r services/${{ matrix.service }}/requirements.txt

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy Production Stack
        run: |
          SERVICE_NAME=${{matrix.service}}
          PASCAL_CASE_NAME=$(echo "$SERVICE_NAME" | awk -F'_' 'BEGIN{OFS=""} { for(i=1;i<=NF;i++) $i=toupper(substr($i,1,1)) substr($i,2); print }')
          STACK_NAME="${PASCAL_CASE_NAME}Stack-prod"
          
          echo "Deploying stack: $STACK_NAME"
          cdk deploy "$STACK_NAME" \
            --app "python3 infra/cdk/stacks/${{ matrix.service }}/app.py" \
            --context env=prod \
            --require-approval never

  destroy-pr:
    if: github.event.pull_request.merged == false && github.event.action == 'closed'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [user_service]
    env:
      PR_NUMBER: ${{ github.event.pull_request.number }}

    steps:
      - uses: actions/checkout@v4
      - run: npm install -g aws-cdk
      - run: pip install -r infra/requirements.txt
      - run: pip install -r services/${{ matrix.service }}/requirements.txt

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Destroy PR Preview Stack
        run: |
          cdk destroy $(echo "${{ matrix.service }}" | sed 's/_/-/g' | awk '{print toupper(substr($0,1,1)) substr($0,2)}')Stack-pr-${{ env.PR_NUMBER }} --force
