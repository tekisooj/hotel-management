name: Deploy CDK

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main
  pull_request_target:
    types: [closed]

env:
  AWS_REGION: us-east-1
  CDK_DEFAULT_ACCOUNT: "914242301564"

permissions:
  id-token: write
  contents: read

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.set.outputs.changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed components (services + bffs)
        id: set
        shell: bash
        run: |
          git fetch origin main --depth=1 || true
          EVENT_NAME="${{ github.event_name }}"
          echo "Event: $EVENT_NAME"
          CHANGED_PATHS=""
          if [ "$EVENT_NAME" = "push" ]; then
            BEFORE="${{ github.event.before }}"; AFTER="${{ github.sha }}"
            CHANGED_PATHS=$(git diff --name-only "$BEFORE" "$AFTER")
          elif [ "$EVENT_NAME" = "pull_request" ]; then
            CHANGED_PATHS=$(git diff --name-only origin/main...HEAD)
          elif [ "$EVENT_NAME" = "pull_request_target" ] && \
               [ "${{ github.event.action }}" = "closed" ] && \
               [ "${{ github.event.pull_request.merged }}" = "true" ] && \
               [ "${{ github.event.pull_request.base.ref }}" = "main" ]; then
            CHANGED_PATHS="__ALL__"
          fi

          TARGETS_JSON='[]'
          if [ "$CHANGED_PATHS" = "__ALL__" ] || [ -z "$CHANGED_PATHS" ]; then
            if [ -d services ]; then
              for n in $(ls services); do
                TARGETS_JSON=$(echo "$TARGETS_JSON" | jq -c --arg p "services/$n" '. + [$p]')
              done
            fi
            if [ -d bffs ]; then
              for n in $(ls bffs); do
                TARGETS_JSON=$(echo "$TARGETS_JSON" | jq -c --arg p "bffs/$n" '. + [$p]')
              done
            fi
          else
            SRV=$(echo "$CHANGED_PATHS" | grep -Eo '^services/[^/]+' | sort -u)
            BFF=$(echo "$CHANGED_PATHS" | grep -Eo '^bffs/[^/]+' | sort -u)
            for p in $SRV; do TARGETS_JSON=$(echo "$TARGETS_JSON" | jq -c --arg p "$p" '. + [$p]'); done
            for p in $BFF; do TARGETS_JSON=$(echo "$TARGETS_JSON" | jq -c --arg p "$p" '. + [$p]'); done
          fi

          echo "changed=$TARGETS_JSON" >> $GITHUB_OUTPUT

  deploy-pr:
    if: github.event_name == 'pull_request'
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: ${{ fromJson(needs.detect-changes.outputs.changed) }}
    env:
      PR_NUMBER: ${{ github.event.pull_request.number }}
      COGNITO_API_DOMAIN: ${{ vars.COGNITO_API_DOMAIN_INT }}
      COGNITO_USER_POOL_ID: ${{ vars.COGNITO_USER_POOL_ID_INT }}
      COGNITO_APP_CLIENT_ID: ${{ vars.COGNITO_APP_CLIENT_ID_INT }}
      USER_API_BASE: ${{ vars.USER_API_BASE_INT }}
      HOST_API_BASE: ${{ vars.HOST_API_BASE_INT }}
      GUEST_API_BASE: ${{ vars.GUEST_API_BASE_INT }}
      GUEST_UI_URL: ${{ vars.GUEST_UI_URL_INT }}
      HOST_UI_URL: ${{ vars.HOST_UI_URL_INT }}
      AUTH_UI_URL: ${{ vars.AUTH_UI_URL_INT }}
      PAYPAL_CLIENT_ID: ${{ vars.PAYPAL_CLIENT_ID }}
      PAYPAL_BASE_URL: ${{ vars.PAYPAL_BASE_URL }}
      PAYPAL_CLIENT_SECRET: ${{ secrets.PAYPAL_CLIENT_SECRET }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python and CDK
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: npm install -g aws-cdk
      - name: Install requirements
        run: pip install -r ${{ matrix.component }}/infra/requirements.txt
      - name: Vendor Python runtime dependencies
        shell: bash
        run: |
          SERVICE_PATH=${{ matrix.component }}
          APP_DIR="$SERVICE_PATH/app"
          if [ -f "$APP_DIR/requirements.txt" ]; then
            pip install -r "$APP_DIR/requirements.txt" -t "$APP_DIR"
          elif [ -f "$SERVICE_PATH/requirements.txt" ]; then
            pip install -r "$SERVICE_PATH/requirements.txt" -t "$APP_DIR"
          fi
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.CDK_DEFAULT_ACCOUNT }}:role/GitHubActionsRole
          aws-region: ${{ env.AWS_REGION }}
      - name: Deploy Preview Stack
        run: |
          SERVICE_PATH=${{ matrix.component }}
          SERVICE_NAME=$(basename "$SERVICE_PATH")
          STACK_NAME="$(echo "$SERVICE_NAME" | sed -E 's/(^|_)([a-z])/\U\2/g')Stack-pr-${PR_NUMBER}"
          cdk deploy "$STACK_NAME" \
            --app "python3 ${SERVICE_PATH}/infra/app.py" \
            --context env=pr \
            --context pr_number=${PR_NUMBER} \
            --require-approval never

  deploy-int:
    if: |
      github.event_name == 'push' && github.ref == 'refs/heads/main' ||
      (github.event_name == 'pull_request_target' && github.event.action == 'closed' &&
       github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main')
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: ${{ fromJson(needs.detect-changes.outputs.changed) }}
    env:
      COGNITO_API_DOMAIN: ${{ vars.COGNITO_API_DOMAIN_INT }}
      COGNITO_USER_POOL_ID: ${{ vars.COGNITO_USER_POOL_ID_INT }}
      COGNITO_APP_CLIENT_ID: ${{ vars.COGNITO_APP_CLIENT_ID_INT }}
      USER_API_BASE: ${{ vars.USER_API_BASE_INT }}
      HOST_API_BASE: ${{ vars.HOST_API_BASE_INT }}
      GUEST_API_BASE: ${{ vars.GUEST_API_BASE_INT }}
      GUEST_UI_URL: ${{ vars.GUEST_UI_URL_INT }}
      HOST_UI_URL: ${{ vars.HOST_UI_URL_INT }}
      AUTH_UI_URL: ${{ vars.AUTH_UI_URL_INT }}
      PAYPAL_CLIENT_ID: ${{ vars.PAYPAL_CLIENT_ID }}
      PAYPAL_BASE_URL: ${{ vars.PAYPAL_BASE_URL }}
      PAYPAL_CLIENT_SECRET: ${{ secrets.PAYPAL_CLIENT_SECRET }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python and CDK
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: npm install -g aws-cdk
      - name: Install requirements
        run: pip install -r ${{ matrix.component }}/infra/requirements.txt
      - name: Vendor Python runtime dependencies
        shell: bash
        run: |
          SERVICE_PATH=${{ matrix.component }}
          APP_DIR="$SERVICE_PATH/app"
          if [ -f "$APP_DIR/requirements.txt" ]; then
            pip install -r "$APP_DIR/requirements.txt" -t "$APP_DIR"
          elif [ -f "$SERVICE_PATH/requirements.txt" ]; then
            pip install -r "$SERVICE_PATH/requirements.txt" -t "$APP_DIR"
          fi
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.CDK_DEFAULT_ACCOUNT }}:role/GitHubActionsRole
          aws-region: ${{ env.AWS_REGION }}
      - name: Deploy Int Stack
        run: |
          SERVICE_PATH=${{ matrix.component }}
          SERVICE_NAME=$(basename "$SERVICE_PATH")
          STACK_NAME="$(echo "$SERVICE_NAME" | sed -E 's/(^|_)([a-z])/\U\2/g')Stack-int"
          cdk deploy "$STACK_NAME" \
            --app "python3 ${SERVICE_PATH}/infra/app.py" \
            --context env=int \
            --require-approval never

  deploy-prod:
    if: |
      github.event_name == 'push' && github.ref == 'refs/heads/main' ||
      (github.event_name == 'pull_request_target' && github.event.action == 'closed' &&
       github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main')
    needs: [detect-changes, deploy-int]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: ${{ fromJson(needs.detect-changes.outputs.changed) }}
    env:
      COGNITO_API_DOMAIN: ${{ vars.COGNITO_API_DOMAIN_PROD }}
      COGNITO_USER_POOL_ID: ${{ vars.COGNITO_USER_POOL_ID_PROD }}
      COGNITO_APP_CLIENT_ID: ${{ vars.COGNITO_APP_CLIENT_ID_PROD }}
      USER_API_BASE: ${{ vars.USER_API_BASE_PROD }}
      HOST_API_BASE: ${{ vars.HOST_API_BASE_PROD }}
      GUEST_API_BASE: ${{ vars.GUEST_API_BASE_PROD }}
      GUEST_UI_URL: ${{ vars.GUEST_UI_URL_PROD }}
      HOST_UI_URL: ${{ vars.HOST_UI_URL_PROD }}
      AUTH_UI_URL: ${{ vars.AUTH_UI_URL_PROD }}
      PAYPAL_CLIENT_ID: ${{ vars.PAYPAL_CLIENT_ID }}
      PAYPAL_BASE_URL: ${{ vars.PAYPAL_BASE_URL }}
      PAYPAL_CLIENT_SECRET: ${{ secrets.PAYPAL_CLIENT_SECRET }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python and CDK
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: npm install -g aws-cdk
      - name: Install requirements
        run: pip install -r ${{ matrix.component }}/infra/requirements.txt
      - name: Vendor Python runtime dependencies
        shell: bash
        run: |
          SERVICE_PATH=${{ matrix.component }}
          APP_DIR="$SERVICE_PATH/app"
          if [ -f "$APP_DIR/requirements.txt" ]; then
            pip install -r "$APP_DIR/requirements.txt" -t "$APP_DIR"
          elif [ -f "$SERVICE_PATH/requirements.txt" ]; then
            pip install -r "$SERVICE_PATH/requirements.txt" -t "$APP_DIR"
          fi
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.CDK_DEFAULT_ACCOUNT }}:role/GitHubActionsRole
          aws-region: ${{ env.AWS_REGION }}
      - name: Deploy Production Stack
        run: |
          SERVICE_PATH=${{ matrix.component }}
          SERVICE_NAME=$(basename "$SERVICE_PATH")
          STACK_NAME="$(echo "$SERVICE_NAME" | sed -E 's/(^|_)([a-z])/\U\2/g')Stack-prod"
          cdk deploy "$STACK_NAME" \
            --app "python3 ${SERVICE_PATH}/infra/app.py" \
            --context env=prod \
            --require-approval never

  destroy-pr:
    if: github.event.pull_request.merged == false && github.event.action == 'closed'
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: ${{ fromJson(needs.detect-changes.outputs.changed) }}
    env:
      PR_NUMBER: ${{ github.event.pull_request.number }}
      COGNITO_API_DOMAIN: ${{ vars.COGNITO_API_DOMAIN_INT }}
      COGNITO_USER_POOL_ID: ${{ vars.COGNITO_USER_POOL_ID_INT }}
      COGNITO_APP_CLIENT_ID: ${{ vars.COGNITO_APP_CLIENT_ID_INT }}
      USER_API_BASE: ${{ vars.USER_API_BASE_INT }}
      HOST_API_BASE: ${{ vars.HOST_API_BASE_INT }}
      GUEST_API_BASE: ${{ vars.GUEST_API_BASE_INT }}
      GUEST_UI_URL: ${{ vars.GUEST_UI_URL_INT }}
      HOST_UI_URL: ${{ vars.HOST_UI_URL_INT }}
      AUTH_UI_URL: ${{ vars.AUTH_UI_URL_INT }}
      PAYPAL_CLIENT_ID: ${{ vars.PAYPAL_CLIENT_ID }}
      PAYPAL_BASE_URL: ${{ vars.PAYPAL_BASE_URL }}
      PAYPAL_CLIENT_SECRET: ${{ secrets.PAYPAL_CLIENT_SECRET }}
    steps:
      - uses: actions/checkout@v4
      - run: npm install -g aws-cdk
      - name: Install requirements
        run: pip install -r ${{ matrix.component }}/infra/requirements.txt
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.CDK_DEFAULT_ACCOUNT }}:role/GitHubActionsRole
          aws-region: ${{ env.AWS_REGION }}
      - name: Destroy PR Preview Stack
        run: |
          SERVICE_PATH=${{ matrix.component }}
          SERVICE_NAME=$(basename "$SERVICE_PATH")
          STACK_NAME="$(echo "$SERVICE_NAME" | sed -E 's/(^|_)([a-z])/\U\2/g')Stack-pr-${PR_NUMBER}"
          cdk destroy "$STACK_NAME" --force
