name: Deploy CDK

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main
  pull_request_target:
    types: [closed]

env:
  AWS_REGION: us-east-1
  CDK_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}

permissions:
  id-token: write
  contents: read

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.set.outputs.changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed components (services + bffs)
        id: set
        shell: bash
        run: |
          git fetch origin main --depth=1 || true
          EVENT_NAME="${{ github.event_name }}"
          echo "Event: $EVENT_NAME"
          CHANGED_PATHS=""
          if [ "$EVENT_NAME" = "push" ]; then
            BEFORE="${{ github.event.before }}"; AFTER="${{ github.sha }}"
            echo "Diff range (push): $BEFORE..$AFTER"
            CHANGED_PATHS=$(git diff --name-only "$BEFORE" "$AFTER")
          elif [ "$EVENT_NAME" = "pull_request" ]; then
            echo "Diff range (PR): origin/main...HEAD"
            CHANGED_PATHS=$(git diff --name-only origin/main...HEAD)
          elif [ "$EVENT_NAME" = "pull_request_target" ] && \
               [ "${{ github.event.action }}" = "closed" ] && \
               [ "${{ github.event.pull_request.merged }}" = "true" ] && \
               [ "${{ github.event.pull_request.base.ref }}" = "main" ]; then
            echo "PR merged into main; deploying all components"
            CHANGED_PATHS="__ALL__"
          fi

          TARGETS_JSON='[]'
          if [ "$CHANGED_PATHS" = "__ALL__" ] || [ -z "$CHANGED_PATHS" ]; then
            echo "No specific paths detected; defaulting to all services and bffs"
            if [ -d services ]; then
              for n in $(ls services); do
                TARGETS_JSON=$(echo "$TARGETS_JSON" | jq --arg p "services/$n" '. + [$p]')
              done
            fi
            if [ -d bffs ]; then
              for n in $(ls bffs); do
                TARGETS_JSON=$(echo "$TARGETS_JSON" | jq --arg p "bffs/$n" '. + [$p]')
              done
            fi
          else
            SRV=$(echo "$CHANGED_PATHS" | grep -Eo '^services/[^/]+' | sort -u)
            BFF=$(echo "$CHANGED_PATHS" | grep -Eo '^bffs/[^/]+' | sort -u)
            for p in $SRV; do TARGETS_JSON=$(echo "$TARGETS_JSON" | jq --arg p "$p" '. + [$p]'); done
            for p in $BFF; do TARGETS_JSON=$(echo "$TARGETS_JSON" | jq --arg p "$p" '. + [$p]'); done
          fi

          echo "Changed components: $TARGETS_JSON"
          echo "changed=$TARGETS_JSON" >> $GITHUB_OUTPUT

  deploy-pr:
    if: github.event_name == 'pull_request'
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: ${{ fromJson(needs.detect-changes.outputs.changed) }}
    env:
      PR_NUMBER: ${{ github.event.pull_request.number }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python and CDK
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - run: npm install -g aws-cdk

      - name: Install requirements
        run: |
          pip install -r ${{ matrix.component }}/infra/requirements.txt

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy Preview Stack
        run: |
          SERVICE_PATH=${{ matrix.component }}
          SERVICE_NAME=$(basename "$SERVICE_PATH")
          PASCAL_CASE_NAME=$(echo "$SERVICE_NAME" | awk -F'_' 'BEGIN{OFS=""} { for(i=1;i<=NF;i++) $i=toupper(substr($i,1,1)) substr($i,2); print }')
          STACK_NAME="${PASCAL_CASE_NAME}Stack-pr-${PR_NUMBER}"

          echo "Deploying stack: $STACK_NAME"
          cdk deploy "$STACK_NAME" \
            --app "python3 ${SERVICE_PATH}/infra/app.py" \
            --context env=pr \
            --context pr_number=${PR_NUMBER} \
            --require-approval never

  deploy-int:
      if: |
        github.event_name == 'push' && github.ref == 'refs/heads/main' ||
        (github.event_name == 'pull_request_target' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main')
      needs: detect-changes
      runs-on: ubuntu-latest
      strategy:
        matrix:
          component: ${{ fromJson(needs.detect-changes.outputs.changed) }}

      steps:
        - uses: actions/checkout@v4

        - name: Setup Python and CDK
          uses: actions/setup-python@v5
          with:
            python-version: "3.11"

        - run: npm install -g aws-cdk

        - name: Install requirements
          run: |
            pip install -r ${{ matrix.component }}/infra/requirements.txt

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
            aws-region: ${{ env.AWS_REGION }}

        - name: Deploy Int Stack
          run: |
            SERVICE_PATH=${{ matrix.component }}
            SERVICE_NAME=$(basename "$SERVICE_PATH")
            PASCAL_CASE_NAME=$(echo "$SERVICE_NAME" | awk -F'_' 'BEGIN{OFS=""} { for(i=1;i<=NF;i++) $i=toupper(substr($i,1,1)) substr($i,2); print }')
            STACK_NAME="${PASCAL_CASE_NAME}Stack-int"

            echo "Deploying stack: $STACK_NAME"
            cdk deploy "$STACK_NAME" \
              --app "python3 ${SERVICE_PATH}/infra/app.py" \
              --context env=int \
              --require-approval never

  deploy-prod:
    if: |
      github.event_name == 'push' && github.ref == 'refs/heads/main' ||
      (github.event_name == 'pull_request_target' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main')
    needs: [detect-changes, deploy-int]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: ${{ fromJson(needs.detect-changes.outputs.changed) }}
    

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python and CDK
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - run: npm install -g aws-cdk

      - name: Install requirements
        run: |
          pip install -r ${{ matrix.component }}/infra/requirements.txt

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy Production Stack
        run: |
          SERVICE_PATH=${{ matrix.component }}
          SERVICE_NAME=$(basename "$SERVICE_PATH")
          PASCAL_CASE_NAME=$(echo "$SERVICE_NAME" | awk -F'_' 'BEGIN{OFS=""} { for(i=1;i<=NF;i++) $i=toupper(substr($i,1,1)) substr($i,2); print }')
          STACK_NAME="${PASCAL_CASE_NAME}Stack-prod"

          echo "Deploying stack: $STACK_NAME"
          cdk deploy "$STACK_NAME" \
            --app "python3 ${SERVICE_PATH}/infra/app.py" \
            --context env=prod \
            --require-approval never

  destroy-pr:
    if: github.event.pull_request.merged == false && github.event.action == 'closed'
    needs: detect-changes
    runs-on: ubuntu-latest
      strategy:
        matrix:
          component: ${{ fromJson(needs.detect-changes.outputs.changed) }}
    env:
      PR_NUMBER: ${{ github.event.pull_request.number }}

    steps:
      - uses: actions/checkout@v4

      - run: npm install -g aws-cdk

      - name: Install requirements
        run: |
          pip install -r ${{ matrix.component }}/infra/requirements.txt

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Destroy PR Preview Stack
        run: |
          SERVICE_PATH=${{ matrix.component }}
          SERVICE_NAME=$(basename "$SERVICE_PATH")
          PASCAL_CASE_NAME=$(echo "$SERVICE_NAME" | awk -F'_' 'BEGIN{OFS=""} { for(i=1;i<=NF;i++) $i=toupper(substr($i,1,1)) substr($i,2); print }')
          STACK_NAME="${PASCAL_CASE_NAME}Stack-pr-${PR_NUMBER}"

          echo "Destroying stack: $STACK_NAME"
          cdk destroy "$STACK_NAME" --force
