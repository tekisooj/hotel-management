name: Deploy CDK (Manual)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment"
        type: choice
        options: [int, prod]
        default: int
        required: true
      components:
        description: "Comma-separated component paths (services/... or bffs/...) â€” leave empty for all"
        type: string
        required: false

env:
  AWS_REGION: us-east-1
  CDK_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}

permissions:
  id-token: write
  contents: read

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      components: ${{ steps.compute.outputs.components }}
    steps:
      - uses: actions/checkout@v4

      - id: compute
        name: Compute component list
        shell: bash
        run: |
          INPUT_COMPONENTS="${{ github.event.inputs.components }}"
          if [ -n "${INPUT_COMPONENTS}" ]; then
            echo "Using selected components: ${INPUT_COMPONENTS}"
            COMPONENTS_JSON=$(echo "${INPUT_COMPONENTS}" | tr -d ' ' | tr ',' '\n' | jq -R -s -c 'split("\n") | map(select(length>0))')
          else
            echo "No components provided. Deploying all services and bffs."
            COMPONENTS_JSON='[]'
            if [ -d services ]; then
              for n in $(ls services); do COMPONENTS_JSON=$(echo "$COMPONENTS_JSON" | jq -c --arg p "services/$n" '. + [$p]'); done
            fi
            if [ -d bffs ]; then
              for n in $(ls bffs); do COMPONENTS_JSON=$(echo "$COMPONENTS_JSON" | jq -c --arg p "bffs/$n" '. + [$p]'); done
            fi
          fi
          echo "components=${COMPONENTS_JSON}" >> $GITHUB_OUTPUT

  deploy:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: ${{ fromJson(needs.prepare.outputs.components) }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python and CDK
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - run: npm install -g aws-cdk

      - name: Install requirements
        run: |
          pip install -r ${{ matrix.component }}/infra/requirements.txt

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy Stack (manual)
        env:
          TARGET_ENV: ${{ github.event.inputs.environment }}
        run: |
          SERVICE_PATH=${{ matrix.component }}
          SERVICE_NAME=$(basename "$SERVICE_PATH")
          PASCAL_CASE_NAME=$(echo "$SERVICE_NAME" | awk -F'_' 'BEGIN{OFS=""} { for(i=1;i<=NF;i++) $i=toupper(substr($i,1,1)) substr($i,2); print }')
          STACK_NAME="${PASCAL_CASE_NAME}Stack-${TARGET_ENV}"

          echo "Deploying stack: $STACK_NAME"
          cdk deploy "$STACK_NAME" \
            --app "python3 ${SERVICE_PATH}/infra/app.py" \
            --context env=${TARGET_ENV} \
            --require-approval never

